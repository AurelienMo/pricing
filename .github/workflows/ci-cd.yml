name: CI/CD

on:
  push:
  pull_request:
    types:
      - opened
      - synchronize
      - closed
  release:
    types: [released]

env:
  PATH_RELEASES: "api"

jobs:
  setup-env:
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - name: Echo github
        env : { CONTENT : "${{ toJson(github) }}" }
        run : "echo $CONTENT"

  execute-ci:
    name: CI
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action != 'closed' && contains(toJson('["develop", "master"]'), github.base_ref)
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8'
          extensions: imagick gd bcmath intl zip
          tools: composer:v1

      - name: Install dependencies
        run: |
          cd ${{ env.PATH_RELEASES }}/
          composer install --no-interaction --no-progress --no-suggest

      - name: PHPStan Static Analysis
        run: |
          cd ${{ env.PATH_RELEASES }}/ && vendor/bin/phpstan --error-format=prettyJson > phpstan-results.json || true

      - name: Deptrac Analysis
        run: |
          cd ${{ env.PATH_RELEASES }}/ && vendor/bin/deptrac analyze --formatter=json

  build-artifact:
    name: Build artifact
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && contains(toJSON('["develop", "master"]'), github.base_ref)
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.4
        id: upload-artifact
        with:
          name: ${{ github.base_ref }}
          path: ${{ env.PATH_RELEASES }}
          retention-days: 5

  create-release:
    # runs only when pushing to master with a merge PR, create a release
    name: Create Release
    needs: [ build-artifact ]
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true  && github.base_ref == github.event.repository.default_branch
    runs-on: ubuntu-latest
    steps:
      - name: Release Drafter
        id: release-drafter
        uses: release-drafter/release-drafter@v5.15.0
        with:
          config-name: config-release-drafter.yml
          commitish: master
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: ${{ github.base_ref }}

      - name: debug
        run: |
          ls -al
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-drafter.outputs.upload_url }}
          asset_path: ${{ github.base_ref }}-${{ steps.release-drafter.outputs.tag_name }}.zip
          asset_name: ${{ github.base_ref }}-${{ steps.release-drafter.outputs.tag_name }}.zip
          asset_content_type: application/zip
